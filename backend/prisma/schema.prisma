// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  LEADER
  MEMBER
}

model super_admin {
  id             String           @id @default(uuid())
  username       String           @unique
  password       String
  refreshToken   String?
  accessToken    String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  cohort_details cohort_details[]
}

model cohort_details {
  id            String      @id @default(ulid())
  cohort_name   String      @unique
  cohort_desc   String
  createBy      super_admin @relation(fields: [super_adminId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  super_adminId String
}

model student_details {
  id                        String    @id @default(uuid())
  email                     String    @unique
  password                  String
  role                      UserRole
  github_link               String?
  hashnode_link             String?
  peerlist_link             String?
  tweeter_link              String?
  refreshToken              String?
  accessToken               String?
  emailVerificationToken    String?
  emailVerificationExpiry   DateTime?
  isEmailVerified           Boolean   @default(false)
  forgotPasswordToken       String?
  forgotPasswordTokenExpiry DateTime?
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
}
